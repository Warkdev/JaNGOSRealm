package eu.jangos.realm.model.world;
// Generated 06-mai-2016 21:17:32 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Itemsubclass generated by hbm2java
 */
@Entity
@Table(name="itemsubclass"
    ,catalog="jangosworld"
)
public class Itemsubclass  implements java.io.Serializable {


     private ItemsubclassId id;
     private Itemclass itemclass;
     private String subclass;
     private Set<Spellitemsubclass> spellitemsubclasses = new HashSet<Spellitemsubclass>(0);
     private Set<Item> items = new HashSet<Item>(0);

    public Itemsubclass() {
    }

	
    public Itemsubclass(ItemsubclassId id, Itemclass itemclass) {
        this.id = id;
        this.itemclass = itemclass;
    }
    public Itemsubclass(ItemsubclassId id, Itemclass itemclass, String subclass, Set<Spellitemsubclass> spellitemsubclasses, Set<Item> items) {
       this.id = id;
       this.itemclass = itemclass;
       this.subclass = subclass;
       this.spellitemsubclasses = spellitemsubclasses;
       this.items = items;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="fkItemclass", column=@Column(name="fk_itemclass", nullable=false) ), 
        @AttributeOverride(name="id", column=@Column(name="id", nullable=false) ) } )
    public ItemsubclassId getId() {
        return this.id;
    }
    
    public void setId(ItemsubclassId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="fk_itemclass", nullable=false, insertable=false, updatable=false)
    public Itemclass getItemclass() {
        return this.itemclass;
    }
    
    public void setItemclass(Itemclass itemclass) {
        this.itemclass = itemclass;
    }

    
    @Column(name="subclass", length=30)
    public String getSubclass() {
        return this.subclass;
    }
    
    public void setSubclass(String subclass) {
        this.subclass = subclass;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="itemsubclass")
    public Set<Spellitemsubclass> getSpellitemsubclasses() {
        return this.spellitemsubclasses;
    }
    
    public void setSpellitemsubclasses(Set<Spellitemsubclass> spellitemsubclasses) {
        this.spellitemsubclasses = spellitemsubclasses;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="itemsubclass")
    public Set<Item> getItems() {
        return this.items;
    }
    
    public void setItems(Set<Item> items) {
        this.items = items;
    }




}


