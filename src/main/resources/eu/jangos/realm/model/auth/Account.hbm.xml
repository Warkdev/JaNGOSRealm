<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<!-- Generated 07-f?vr.-2016 19:53:37 by Hibernate Tools 4.3.1 -->
<hibernate-mapping>
  <class catalog="jangosauth" name="eu.jangos.realm.model.auth.Account" optimistic-lock="version" table="account">
    <id name="id" type="java.lang.Integer">
      <column name="id"/>
      <generator class="identity"/>
    </id>
    <many-to-one class="eu.jangos.realm.model.auth.Locale" fetch="select" name="locale">
      <column name="fk_locale">
        <comment>The locale used by this client</comment>
      </column>
    </many-to-one>
    <many-to-one class="eu.jangos.realm.model.auth.Realm" fetch="select" name="realm">
      <column name="fk_prefrealm">
        <comment>ID of the preferred realm for this account.</comment>
      </column>
    </many-to-one>
    <property name="name" type="string">
      <column length="30" name="name" not-null="true" unique="true">
        <comment>Name of the account, used within the WoW client to logon.</comment>
      </column>
    </property>
    <property name="hashPass" type="string">
      <column length="40" name="hash_pass" not-null="true">
        <comment>Hash of the account, according to SRP6 spec: H(I | ":" | P) where H is SHA1 algorithm. Generated at account creation time.</comment>
      </column>
    </property>
    <property name="sessionkey" type="string">
      <column name="sessionkey">
        <comment>Storing the session key for reconnect operations.</comment>
      </column>
    </property>
    <property name="verifier" type="string">
      <column name="verifier">
        <comment>According to the SRP6 specs, this is the client's password verifier. It is calculated at the first authentication time (avoiding to recalculate hash each
                time).</comment>
      </column>
    </property>
    <property name="salt" type="string">
      <column name="salt">
        <comment>According to the SRP6 specs, this is the server salt. It is calculated at the first authentication time (avoiding to recalculate hash each
                time).</comment>
      </column>
    </property>
    <property name="email" type="string">
      <column length="50" name="email">
        <comment>Account Owner's email.</comment>
      </column>
    </property>
    <property name="creation" type="timestamp">
      <column length="19" name="creation" not-null="true">
        <comment>Account creation time (for records).</comment>
      </column>
    </property>
    <property name="lastIp" type="string">
      <column length="30" name="lastIP" not-null="true">
        <comment>Last IP used for this account.</comment>
      </column>
    </property>
    <property name="failedattempt" type="int">
      <column name="failedattempt" not-null="true">
        <comment>Number of failed attempt made for this account.</comment>
      </column>
    </property>
    <property name="locked" type="boolean">
      <column name="locked" not-null="true">
        <comment>Indicates whether this account is locked or not.</comment>
      </column>
    </property>
    <property name="lastlogin" type="timestamp">
      <column length="19" name="lastlogin" not-null="true">
        <comment>Timestamp of the last login performed by this account.</comment>
      </column>
    </property>
    <property name="online" type="boolean">
      <column name="online" not-null="true">
        <comment>Flag value indicating whether this account is already online or not.</comment>
      </column>
    </property>
    <set fetch="select" inverse="true" lazy="true" name="bannedaccountsForFkBannedby" table="bannedaccount">
      <key>
        <column name="fk_bannedby" not-null="true">
          <comment>Foreign Key to account indicating who is the requestor of the ban.</comment>
        </column>
      </key>
      <one-to-many class="eu.jangos.realm.model.auth.Bannedaccount"/>
    </set>
    <set fetch="select" inverse="false" lazy="true" name="roleses" table="account_roles">
      <key>
        <column name="fk_account" not-null="true"/>
      </key>
      <many-to-many entity-name="eu.jangos.realm.model.Roles">
        <column name="fk_roles" not-null="true"/>
      </many-to-many>
    </set>
    <set fetch="select" inverse="true" lazy="true" name="bannedips" table="bannedip">
      <key>
        <column name="fk_bannedby" not-null="true">
          <comment>Foreign Key to account indicating who is the requestor of the ban.</comment>
        </column>
      </key>
      <one-to-many class="eu.jangos.realm.model.auth.Bannedip"/>
    </set>
    <set cascade="delete" fetch="select" inverse="true" lazy="true" name="bannedaccountsForFkBannedaccount" table="bannedaccount">
      <key>
        <column name="fk_bannedaccount" not-null="true">
          <comment>ID of the banned account.</comment>
        </column>
      </key>
      <one-to-many class="eu.jangos.realm.model.auth.Bannedaccount"/>
    </set>
    <set cascade="delete" fetch="select" inverse="true" lazy="true" name="realmAccounts" table="realm_account">
      <key>
        <column name="fk_account" not-null="true">
          <comment>Foreign key to the account.</comment>
        </column>
      </key>
      <one-to-many class="eu.jangos.realm.model.auth.RealmAccount"/>
    </set>
  </class>
</hibernate-mapping>
